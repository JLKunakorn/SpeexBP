if (typeof window.nextClicked === "undefined") {
    window.nextClicked = false;
}

if (typeof window.refreshSolve !== "function") {
    window.refreshSolve = async function () {
        console.log("üéØ [Refresh] ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏∏‡πà‡∏°‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å)...");

        // ‚úÖ ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ó‡∏∏‡∏Å‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏∏‡πà‡∏°
        let allQuestions = document.querySelectorAll(".exercise-items .input-group");
        let refreshButtons = [];

        // ‚úÖ ‡πÅ‡∏¢‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (‡πÑ‡∏°‡πà‡∏ô‡∏±‡∏ö .has-success)
        allQuestions.forEach(question => {
            if (!question.classList.contains("has-success")) {  // ‡∏Ç‡πâ‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß
                let refreshButton = question.querySelector(".halflings-icon.refresh");
                if (refreshButton) {
                    refreshButtons.push(refreshButton);
                }
            }
        });

        console.log(`üîÑ [Refresh] ‡∏™‡∏∏‡πà‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ${refreshButtons.length} ‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á`);

        // ‚úÖ ‡∏™‡∏∏‡πà‡∏°‡∏ó‡∏∏‡∏Å‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏∏‡πà‡∏° (‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å)
        for (let i = 0; i < refreshButtons.length; i++) {
            refreshButtons[i].click();
            console.log(`üîÑ [Refresh] ‡∏™‡∏∏‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà ${i + 1}`);
            await new Promise(resolve => setTimeout(resolve, 100));
        }

        // ‚úÖ ‡∏Å‡∏î Correction ‡∏ï‡∏£‡∏ß‡∏à‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö
        let correctionButton = document.querySelector(".action-exercise-button.correct");
        if (correctionButton) {
            correctionButton.click();
            console.log("‚úÖ [Refresh] ‡∏Å‡∏î Correction ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö...");
        } else {
            console.log("‚ùå [Refresh] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏° Correction!");
            return;
        }

        await new Promise(resolve => setTimeout(resolve, 500));

        // ‚úÖ **‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô**
        let incorrectAnswers = document.querySelectorAll(".exercise-items .input-group.has-error");
        while (incorrectAnswers.length > 0) {
            console.log(`‚ùå [Refresh] ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î ${incorrectAnswers.length} ‡∏Ç‡πâ‡∏≠ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏∏‡πà‡∏°‡πÉ‡∏´‡∏°‡πà...`);

            for (let question of incorrectAnswers) {
                let refreshButton = question.querySelector(".halflings-icon.refresh");
                if (refreshButton) {
                    refreshButton.click();
                    console.log("üîÑ [Refresh] ‡∏Å‡∏î‡∏™‡∏∏‡πà‡∏°‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î...");
                    await new Promise(resolve => setTimeout(resolve, 100));
                }
            }

            // ‚úÖ ‡∏Å‡∏î Correction ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡∏°‡πà
            correctionButton = document.querySelector(".action-exercise-button.correct");
            if (correctionButton) {
                correctionButton.click();
                console.log("‚úÖ [Refresh] ‡∏Å‡∏î Correction ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á...");
            } else {
                console.log("‚ùå [Refresh] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏° Correction!");
                return;
            }

            await new Promise(resolve => setTimeout(resolve, 500));
            incorrectAnswers = document.querySelectorAll(".exercise-items .input-group.has-error");
        }

        console.log("üéâ [Refresh] ‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏™‡∏£‡πá‡∏à! ‡∏ó‡∏∏‡∏Å‡∏Ç‡πâ‡∏≠‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß!");

        // ‚úÖ **‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏Å‡∏î Next ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á**
        let nextButton = document.querySelector(".action-exercise-button.next");
        if (nextButton && !window.nextClicked) {
            window.nextClicked = true;  // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏î Next ‡∏ã‡πâ‡∏≥
            console.log("‚û°Ô∏è [Refresh] ‡∏Å‡∏î Next ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ...");
            nextButton.click();

            // ‚úÖ **‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å checkAndRun() ‡∏ã‡πâ‡∏≥**
            setTimeout(() => {
                console.log("üéØ [Refresh] ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å checkAndRun() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡πá‡∏Ñ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÉ‡∏´‡∏°‡πà...");
                window.nextClicked = false;  // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏î Next ‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏£‡∏≠‡∏ö‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
                checkAndRun();
            }, 2000);
        } else {
            console.log("‚ùå [Refresh] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏° Next! ‡∏´‡∏£‡∏∑‡∏≠‡∏ñ‡∏π‡∏Å‡∏Å‡∏î‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß");
        }
    };
}






// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô `Drag`
if (typeof window.Drag !== "function") {
    window.Drag = function () {
        console.log("üöÄ [Drag] ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô...");

        let targetElement = document.querySelector('.exercise-items .drag-drop-placeholder.ui-droppable');

        if (targetElement) {
            targetElement.click();
            console.log("‚úÖ [Drag] ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏ó‡∏µ‡πà .drag-drop-placeholder.ui-droppable");
        } else {
            console.log("‚ùå [Drag] ‡πÑ‡∏°‡πà‡∏û‡∏ö .drag-drop-placeholder.ui-droppable");
        }

        setTimeout(() => {
            console.log("üöÄ [Drag] ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏à‡∏≤‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡πÑ‡∏õ‡∏°‡∏≤‡∏Å...");

            let draggableElements = Array.from(document.querySelectorAll('.draggable-container .drag-drop.ui-state-default.ui-draggable.ui-draggable-handle.ui-droppable'));

            draggableElements.sort((a, b) => {
                let idA = parseInt(a.getAttribute('data-drag-drop-id').replace('drag-drop-', ''), 10);
                let idB = parseInt(b.getAttribute('data-drag-drop-id').replace('drag-drop-', ''), 10);
                return idA - idB;
            });

            draggableElements.forEach((element, index) => {
                setTimeout(() => {
                    element.click();
                    console.log(`‚úÖ [Drag] ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà ${element.getAttribute('data-drag-drop-id')}`);
                }, index * 10);
            });

            console.log("üéØ [Drag] ‡∏Ñ‡∏•‡∏¥‡∏Å Drag-Drop ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß!");

            setTimeout(() => {
                console.log("üöÄ [Drag] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏î Correction...");

                let correctionButton = document.querySelector('.action-exercise-button.correct');
                if (correctionButton) {
                    correctionButton.click();
                    console.log("‚úÖ [Drag] ‡∏Å‡∏î Correction ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
                } else {
                    console.log("‚ùå [Drag] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏° Correction!");
                }

                setTimeout(() => {
                    console.log("üöÄ [Drag] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏î Next...");

                    let nextButton = document.querySelector('.action-exercise-button.next');
                    if (nextButton) {
                        nextButton.click();
                        console.log("‚úÖ [Drag] ‡∏Å‡∏î Next ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
                    } else {
                        console.log("‚ùå [Drag] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏° Next!");
                    }

                    console.log("üéâ [Drag] ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô!");
                }, 1000);
            }, draggableElements.length * 10 + 500);
        }, 500);
    };
}

if (typeof window.SingleChoice !== "function") {
    window.SingleChoice = async function () {
        console.log("üéØ [Single Choice] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° Correction ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á...");

        let correctionButton = document.querySelector(".action-exercise-button.correct");
        if (correctionButton) {
            correctionButton.click();
            console.log("‚úÖ ‡∏Å‡∏î Correction ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á...");
        } else {
            console.log("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏° Correction!");
            return;
        }

        await new Promise(resolve => setTimeout(resolve, 1000));

        let allQuestions = document.querySelectorAll('.item.choice-item');
        console.log(`üéØ ‡∏û‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ${allQuestions.length} ‡∏Ç‡πâ‡∏≠`);

        let clickPromises = Array.from(allQuestions).map((question, index) => {
            return new Promise(resolve => {
                let correctChoice = question.querySelector('.choice-option.should-be-checked');
                if (correctChoice) {
                    let radioInput = correctChoice.querySelector('input[type="radio"]');
                    if (radioInput) {
                        radioInput.click();
                        console.log(`‚úîÔ∏è ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà ${index + 1}`);
                    }
                }
                resolve();
            });
        });

        await Promise.all(clickPromises);

        if (correctionButton) {
            correctionButton.click();
            console.log("‚úÖ ‡∏Å‡∏î Correction ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö...");
        }

        let nextButton = document.querySelector(".action-exercise-button.next");
        if (nextButton && !window.nextClicked) { // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏î‡∏ã‡πâ‡∏≥
            window.nextClicked = true;
            nextButton.click();
            console.log("‚û°Ô∏è ‡∏Å‡∏î Next ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ...");

            setTimeout(() => {
                window.nextClicked = false; // ‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏£‡∏≠‡∏ö‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
                checkAndRun();  // ‚úÖ ‡πÄ‡∏ä‡πá‡∏Ñ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
            }, 2000);
        } else {
            console.log("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏° Next! ‡∏´‡∏£‡∏∑‡∏≠‡∏ñ‡∏π‡∏Å‡∏Å‡∏î‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß");
        }

        console.log("üéâ [Single Choice] ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!");
    };
}


if (typeof window.ManyAnswers !== "function") {
    window.ManyAnswers = async function () {
        console.log("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô Many Answers...");

        let choiceItems = document.querySelectorAll('.exercise-items .item.choice-item');
        for (let i = 1; i < choiceItems.length; i++) {
            choiceItems[i].remove();
        }
        console.log("‚úÖ ‡∏•‡∏ö .choice-item ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏û‡∏µ‡∏¢‡∏á 1 ‡∏ï‡∏±‡∏ß");

        let correctionButton = document.querySelector('.action-exercise-button.correct');
        if (correctionButton) {
            correctionButton.click();
            console.log("‚úÖ ‡∏Å‡∏î Correction ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö");
        } else {
            console.log("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏° Correction!");
            return;
        }

        await new Promise(resolve => setTimeout(resolve, 1000));

        let checkedOptions = document.querySelectorAll('.item.choice-item .choice-option.should-be-checked');
        if (checkedOptions.length === 0) {
            console.log("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏î!");
            return;
        }

        checkedOptions.forEach(option => {
            let checkbox = option.querySelector('input.choice');
            if (checkbox) {
                checkbox.click();
                console.log(`‚úÖ ‡∏Å‡∏î‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: ${option.innerText.trim()}`);
            }
        });

        if (correctionButton) {
            correctionButton.click();
            console.log("‚úÖ ‡∏Å‡∏î Correction ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á");
        }

        let nextButton = document.querySelector(".action-exercise-button.next");
        if (nextButton) {
            nextButton.click();
            console.log("‚û°Ô∏è ‡∏Å‡∏î Next ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ...");
        } else {
            console.log("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏° Next!");
        }

        console.log("üéâ [Many Answers] ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!");
    };
}

if (typeof window.markTextSolve !== "function") {
    window.markTextSolve = async function () {
        console.log("üéØ [Mark Text] ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô...");

        let markTexts = document.querySelectorAll(".exercise-items .mark-text");
        if (markTexts.length > 0) {
            markTexts.forEach(mark => {
                mark.click();
                console.log("‚úÖ [Mark Text] ‡∏Å‡∏î‡∏ó‡∏µ‡πà .mark-text");
            });
        } else {
            console.log("‚ùå [Mark Text] ‡πÑ‡∏°‡πà‡∏û‡∏ö .mark-text");
        }

        let correctionButton = document.querySelector(".action-exercise-button.correct");
        if (correctionButton) {
            await new Promise(resolve => setTimeout(resolve, 500));
            correctionButton.click();
            console.log("‚úÖ [Mark Text] ‡∏Å‡∏î Correction...");
        }

        await new Promise(resolve => setTimeout(resolve, 1000));

        let nextButton = document.querySelector(".action-exercise-button.next");
        if (nextButton) {
            nextButton.click();
            console.log("‚û°Ô∏è [Mark Text] ‡∏Å‡∏î Next...");
        }

        console.log("üéâ [Mark Text] ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!");
    };
}

if (typeof window.Arrange !== "function") {
    window.Arrange = async function () {
        console.log("üéØ [Arrange] ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô...");

        let items = document.querySelectorAll('.exercise-items .item');
        items.forEach(item => {
            let scrambledBlocks = Array.from(item.querySelectorAll('.scrambled-block'));
            scrambledBlocks.sort((a, b) => {
                let idA = parseInt(a.getAttribute('data-scrambled-block-id').replace('scr-block-', ''), 10);
                let idB = parseInt(b.getAttribute('data-scrambled-block-id').replace('scr-block-', ''), 10);
                return idA - idB;
            });

            let parentElement = item.querySelector('.scrambled-sentence');
            parentElement.innerHTML = '';
            scrambledBlocks.forEach((block) => {
                parentElement.appendChild(block);
            });
        });

        console.log("‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏Ñ‡∏≥‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß!");

        let correctionButton = document.querySelector('.action-exercise-button.correct');
        if (correctionButton) {
            correctionButton.click();
            console.log("‚úÖ ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° Correction");
        }

        await new Promise(resolve => setTimeout(resolve, 1000));

        let nextButton = document.querySelector('.action-exercise-button.next');
        if (nextButton) {
            nextButton.click();
            console.log("‚úÖ ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° Next");
        }
    };
}

if (typeof window.correctionOrNext !== "function") {
    window.correctionOrNext = async function () {
        console.log("üéØ [Correction ‡∏´‡∏£‡∏∑‡∏≠ Next] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ä‡πá‡∏Ñ...");

        let correctionButton = document.querySelector(".action-exercise-button.correct");
        if (correctionButton) {
            correctionButton.click();
            console.log("‚úÖ ‡∏Å‡∏î Correction");
            await new Promise(resolve => setTimeout(resolve, 1000));
        }

        let nextButton = document.querySelector(".action-exercise-button.next");
        if (nextButton) {
            nextButton.click();
            console.log("‚úÖ ‡∏Å‡∏î Next");
        } else {
            console.log("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏° Next!");
        }

        setTimeout(checkAndRun, 2000);
    };
}

if (typeof window.Write !== "function") {
    window.Write = async function() {
        console.log("‚úçÔ∏è [Write] ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô...");

        let correctionButton = document.querySelector('.action-exercise-button.correct');
        if (correctionButton) {
            correctionButton.click();
            console.log("‚úÖ [Write] ‡∏Å‡∏î Correction ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö");
        } else {
            console.log("‚ùå [Write] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏° Correction!");
            return;
        }

        await new Promise(resolve => setTimeout(resolve, 1500));

        let solutionButton = document.querySelector('button.btn-link.solution');
        if (solutionButton) {
            solutionButton.click();
            console.log("‚úÖ [Write] ‡∏Å‡∏î Solution");

            await new Promise(resolve => setTimeout(resolve, 500));

            let answers = [];
            let answerFields = document.querySelectorAll('.answer.form-control');

            if (answerFields.length === 0) {
                console.log("‚ùå [Write] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö!");
                return;
            }

            answerFields.forEach(field => {
                answers.push(field.value);
            });

            console.log("üìù [Write] ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö: ", answers);

            let repeatButton = document.querySelector('button[class*="repeat"]');
            if (repeatButton) {
                repeatButton.click();
                console.log("‚úÖ [Write] ‡∏Å‡∏î Repeat");
            } else {
                console.log("‚ùå [Write] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏° Repeat!");
                return;
            }

            await new Promise(resolve => setTimeout(resolve, 500));

            let blanks = document.querySelectorAll('.answer.form-control');
            await Promise.all(Array.from(blanks).map((blank, index) => {
                if (answers[index]) {
                    blank.value = answers[index];
                    console.log(`‚úÖ [Write] ‡πÄ‡∏ï‡∏¥‡∏°‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö '${answers[index]}' ‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà ${index + 1}`);
                }
            }));

            correctionButton = document.querySelector('.action-exercise-button.correct');
            if (correctionButton) {
                correctionButton.click();
                console.log("‚úÖ [Write] ‡∏Å‡∏î Correction ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á");
            } else {
                console.log("‚ùå [Write] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏° Correction ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á!");
            }

            await new Promise(resolve => setTimeout(resolve, 1000));

            let nextButton = document.querySelector(".action-exercise-button.next");
            if (nextButton) {
                nextButton.click();
                console.log("‚û°Ô∏è [Write] ‡∏Å‡∏î Next ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ...");
            } else {
                console.log("‚ùå [Write] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏° Next!");
            }

            console.log("üéâ [Write] ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô!");
        } else {
            console.log("‚ùå [Write] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏° Solution!");
        }
    };
}

window.Long = async function() {
    console.log("üéØ [Long] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° Correction ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á...");

    let correctionButton = document.querySelector('.action-exercise-button.correct');
    if (correctionButton) {
        correctionButton.click();
        console.log("‚úÖ [Long] ‡∏Å‡∏î Correction ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö");
    } else {
        console.log("‚ùå [Long] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏° Correction!");
        return;
    }

    await new Promise(resolve => setTimeout(resolve, 700));

    let exerciseItems = document.querySelectorAll('.exercise-items .item');
    let successItemFound = false;

    exerciseItems.forEach(item => {
        if (item.querySelector('.scrambled-cell.success')) {
            successItemFound = true;
        } else {
            item.remove();
        }
    });

    await new Promise(resolve => setTimeout(resolve, 500));

    if (!successItemFound) {
        console.log("‚ùå [Long] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà...");
        let solutionButton = document.querySelector('button.btn-link.solution');
        if (solutionButton) {
            solutionButton.click();
            console.log("‚úÖ [Long] ‡∏Å‡∏î Solution ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");
        } else {
            console.log("‚ùå [Long] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏° Solution!");
        }

        await new Promise(resolve => setTimeout(resolve, 700));

        let repeatButton = document.querySelector('button[class*="repeat"]');
        if (repeatButton) {
            repeatButton.click();
            console.log("‚úÖ [Long] ‡∏Å‡∏î Repeat ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡∏°‡πà");
        } else {
            console.log("‚ùå [Long] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏° Repeat!");
        }

        await new Promise(resolve => setTimeout(resolve, 1000));
        window.Long(); // ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
    } else {
        console.log("üéâ [Long] ‡∏û‡∏ö‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß!");

        correctionButton = document.querySelector('.action-exercise-button.correct');
        if (correctionButton) {
            correctionButton.click();
            console.log("‚úÖ [Long] ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° Correction ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏•‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à");
        }

        await new Promise(resolve => setTimeout(resolve, 700));

        let nextButton = document.querySelector('button[class*="next"]');
        if (nextButton && !window.nextClicked) { // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏ã‡πâ‡∏≥
            window.nextClicked = true;
            nextButton.click();
            console.log("‚úÖ [Long] ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° Next ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ");
            
            setTimeout(() => {
                window.nextClicked = false; // ‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏£‡∏≠‡∏ö‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
                checkAndRun();
            }, 2000);
        } else {
            console.log("‚ùå [Long] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏° Next! ‡∏´‡∏£‡∏∑‡∏≠‡∏ñ‡∏π‡∏Å‡∏Å‡∏î‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß");
        }
    }
};





let autoLoop = setInterval(() => {
    let continueButton = document.querySelector(".btn.btn-primary.next");
    if (!continueButton) {
        checkAndRun();
    } else {
        console.log("üéâ [Auto] ‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏° 'Continue Learning' ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô");
        clearInterval(autoLoop);
    }
}, 3000);

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
function checkAndRun() {
    let exerciseItems = document.querySelector(".exercise-items");

    if (exerciseItems) {
        let gapElements = exerciseItems.querySelectorAll(".gap-container.form-inline.form-group-sm");
        let dragElements = exerciseItems.querySelectorAll(".drag-drop-placeholder.ui-droppable");
        let radioElements = exerciseItems.querySelectorAll('input[type="radio"]');
        let checkBoxElements = exerciseItems.querySelectorAll('input[type="checkbox"]');
        let markTextElements = exerciseItems.querySelectorAll(".mark-text");
        let scrambledSentenceElements = exerciseItems.querySelectorAll(".scrambled-sentence.ui-sortable");
        let answerContainer = exerciseItems.querySelectorAll(".answer-container.form-inline.form-group-sm");
        let scrambledCellContainer = document.querySelector(".scrambled-cell-container");

        if (gapElements.length > 0) {
            console.log(`üîç ‡∏û‡∏ö ${gapElements.length} elements ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç! ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ refreshSolve()...`);
            window.refreshSolve();
        } else if (dragElements.length > 0) {
            console.log(`üîç ‡∏û‡∏ö ${dragElements.length} elements ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç! ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ Drag()...`);
            window.Drag();
        } else if (radioElements.length > 0) {
            console.log(`üîç ‡∏û‡∏ö ${radioElements.length} elements ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç! ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ SingleChoice()...`);
            window.SingleChoice();
        } else if (checkBoxElements.length > 0) {
            console.log(`üîç ‡∏û‡∏ö ${checkBoxElements.length} elements ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç! ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ ManyAnswers()...`);
            window.ManyAnswers();
        } else if (markTextElements.length > 0) {
            console.log(`üîç ‡∏û‡∏ö ${markTextElements.length} elements ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç! ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ markTextSolve()...`);
            window.markTextSolve();
        } else if (scrambledSentenceElements.length > 0) {
            console.log(`üîç ‡∏û‡∏ö ${scrambledSentenceElements.length} elements ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç! ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ Arrange()...`);
            window.Arrange();
        } else if (answerContainer.length > 0) {
            console.log(`üîç ‡∏û‡∏ö ${answerContainer.length} elements ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç! ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ Write()...`);
            window.Write();
        } else if (scrambledCellContainer) { 
            console.log(`üîç ‡∏û‡∏ö Scrambled Cell Container! ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ Long()...`);
            window.Long();
        } else {
            console.log("‚úÖ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô, ‡∏Å‡∏î Correction ‡∏´‡∏£‡∏∑‡∏≠ Next");
            window.correctionOrNext();
        }
    } else {
        console.log("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö .exercise-items ‡∏ö‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö!");
    }
}

// ‚úÖ ‡∏£‡∏±‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
setTimeout(checkAndRun, 2000);
