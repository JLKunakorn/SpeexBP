async function ManyAnswers() {
    console.log("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á .choice-item...");

    // 1Ô∏è‚É£ ‡∏´‡∏≤‡∏ó‡∏∏‡∏Å .item.choice-item ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô .exercise-items
    let choiceItems = document.querySelectorAll('.exercise-items .item.choice-item');

    // 2Ô∏è‚É£ ‡∏•‡∏ö‡∏ó‡∏∏‡∏Å .item.choice-item ‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏£‡∏Å
    for (let i = 1; i < choiceItems.length; i++) {
        choiceItems[i].remove();
    }
    console.log("‚úÖ ‡∏•‡∏ö .choice-item ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏û‡∏µ‡∏¢‡∏á 1 ‡∏ï‡∏±‡∏ß");

    // üîÅ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏£‡∏≠‡∏õ‡∏∏‡πà‡∏°
    async function waitForButton(selector, maxWaitTime = 5000) {
        let elapsedTime = 0;
        while (elapsedTime < maxWaitTime) {
            let button = document.querySelector(selector);
            if (button) return button;
            console.log(`‚åõ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡∏õ‡∏∏‡πà‡∏° ${selector} (${elapsedTime}ms)`);
            await new Promise(resolve => setTimeout(resolve, 300)); // ‡∏£‡∏≠ 300ms ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏ä‡πá‡∏Ñ‡πÉ‡∏´‡∏°‡πà
            elapsedTime += 300;
        }
        return null;
    }

    // üîÅ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏£‡∏≠ elements (‡πÄ‡∏ä‡πà‡∏ô .choice-option.should-be-checked)
    async function waitForElements(selector, maxWaitTime = 5000) {
        let elapsedTime = 0;
        while (elapsedTime < maxWaitTime) {
            let elements = document.querySelectorAll(selector);
            if (elements.length > 0) return elements;
            console.log(`‚åõ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠ ${selector} (${elapsedTime}ms)`);
            await new Promise(resolve => setTimeout(resolve, 300));
            elapsedTime += 300;
        }
        return [];
    }

    // 3Ô∏è‚É£ ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° "Correction"
    let correctionButton = await waitForButton('.action-exercise-button.correct');
    if (correctionButton) {
        correctionButton.click();
        console.log("‚úÖ ‡∏Å‡∏î Correction ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö");
    } else {
        console.log("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏° Correction!");
        return;
    }

    // 4Ô∏è‚É£ **‡∏£‡∏≠‡πÉ‡∏´‡πâ .choice-option.should-be-checked ‡πÇ‡∏ú‡∏•‡πà‡∏°‡∏≤**
    let checkedOptions = await waitForElements('.item.choice-item .choice-option.should-be-checked', 5000);

    if (checkedOptions.length === 0) {
        console.log("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏î‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å Correction!");
        return;
    }

    // 5Ô∏è‚É£ ‡∏Å‡∏î‡∏ó‡∏∏‡∏Å `.choice-option.should-be-checked`
    checkedOptions.forEach(option => {
        let checkbox = option.querySelector('input.choice');
        if (checkbox) {
            checkbox.click();
            console.log(`‚úÖ ‡∏Å‡∏î‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: ${option.innerText.trim()}`);
        }
    });

    // 6Ô∏è‚É£ ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° "Correction" ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
    correctionButton = await waitForButton('.action-exercise-button.correct');
    if (correctionButton) {
        correctionButton.click();
        console.log("‚úÖ ‡∏Å‡∏î Correction ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á");
    } else {
        console.log("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏° Correction ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á!");
        return;
    }

    // 7Ô∏è‚É£ ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ 400 - 800 ms (‡∏•‡∏î‡∏•‡∏á‡∏à‡∏≤‡∏Å 500 - 1000 ms)
    let waitTime = Math.random() * (800 - 400) + 400;
    await new Promise(resolve => setTimeout(resolve, waitTime));

    // 8Ô∏è‚É£ ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° Next
    let nextButton = await waitForButton(".action-exercise-button.next");
    if (nextButton) {
        nextButton.click();
        console.log("‚û°Ô∏è ‡∏Å‡∏î Next ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ...");
    } else {
        console.log("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏° Next!");
    }

    console.log("üéâ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£ ManyAnswers!");
}

// üî• ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô `ManyAnswers();`
ManyAnswers();
