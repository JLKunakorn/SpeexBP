async function markTextSolve() {
    console.log("üéØ [Mark Text] ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô...");

    // 1Ô∏è‚É£ ‡∏Å‡∏î‡∏ó‡∏∏‡∏Å `.mark-text` ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô `.exercise-items`
    let markTexts = document.querySelectorAll(".exercise-items .mark-text");
    if (markTexts.length > 0) {
        markTexts.forEach(mark => {
            mark.click();
            console.log("‚úÖ [Mark Text] ‡∏Å‡∏î‡∏ó‡∏µ‡πà .mark-text");
        });
    } else {
        console.log("‚ùå [Mark Text] ‡πÑ‡∏°‡πà‡∏û‡∏ö .mark-text ‡πÉ‡∏ô .exercise-items");
    }

    // 2Ô∏è‚É£ ‡∏Å‡∏î Correction
    let correctionButton = document.querySelector(".action-exercise-button.correct");
    if (correctionButton) {
        await new Promise(resolve => setTimeout(resolve, 500)); // ‡∏´‡∏ô‡πà‡∏ß‡∏á 0.5 ‡∏ß‡∏¥
        correctionButton.click();
        console.log("‚úÖ [Mark Text] ‡∏Å‡∏î Correction...");
    } else {
        console.log("‚ùå [Mark Text] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏° Correction!");
        return;
    }

    // 3Ô∏è‚É£ ‡∏£‡∏≠ 1 ‡∏ß‡∏¥ ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î Next
    await new Promise(resolve => setTimeout(resolve, 1000));

    let nextButton = document.querySelector(".action-exercise-button.next");
    if (nextButton) {
        nextButton.click();
        console.log("‚û°Ô∏è [Mark Text] ‡∏Å‡∏î Next ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ...");
    } else {
        console.log("‚ùå [Mark Text] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏° Next!");
    }

    console.log("üéâ [Mark Text] ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô!");
}

// üî• ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î
markTextSolve();
